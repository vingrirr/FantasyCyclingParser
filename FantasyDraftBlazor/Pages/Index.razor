@page "/"

@using FantasyDraftBlazor.Data
@using Microsoft.AspNetCore.SignalR.Client
@using FantasyCyclingParser;
@inject NavigationManager NavManager
@inject RiderService RiderService
@implements IAsyncDisposable



<PageTitle>Fantasy Cycling Draft</PageTitle>
<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

<style>
    #div1 {
        width: 350px;
        height: 70px;
        padding: 10px;
        border: 1px solid #aaaaaa;
    }
</style>

<!--<img class="animate__animated animate__backOutLeft animate__delay-2s" src="data:image;base64,@System.Convert.ToBase64String(photo.Image)" /> -->


<div class="mat-layout-grid" style="visibility: @Visibility">
    <div class="mat-layout-grid-inner">
        
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12" >
        <h4>
                Round: @DraftRound | Pick Number: @PickNumber | <span style="float:right; color: #6200ee"> 
                    @if(@NextTeam != null)
                    {
                        <strong>On Deck: </strong> @NextTeam.TeamName
                    }
                    else
                    {
                        <strong>On Deck: None, we are finished!</strong>
                    }
                </span>
            
        </h4>
        <hr />
        </div>
         @* <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                    <Timer></Timer>
                </div>
       *@
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
            <DraftContainer RiderList="AvailableRiders" OnExistingRiderUndo="HandleRemoveExistingRider" OnTeamSave="HandleSaveChanges" OnTimerUpdated="HandleTimerUpdated" OnRiderUndo="HandleRiderUndo" OnStatusUpdated="HandleStatusUpdated">
              
                <div class="mat-layout-grid-cell mat-layout-grid-cell">
                    <DraftRiderList ></DraftRiderList>
                </div>

                <div class="mat-layout-grid-cell mat-layout-grid-cell">
                    <DraftTeam Team="CurrentTeam" IsAdmin="false"></DraftTeam>
                    </div>
              
                
            </DraftContainer>
        </div>
 
    </div>
    </div>


    <div >
    <img src="~/tommyb.webp" />
    </div>
@code {

    private HubConnection? hubConnection;
    private List<string> messages = new();
    private string? userInput;
    private string? messageInput;
    private RiderPhoto photo;
    //protected override async Task OnInitializedAsync()
    //{

    //    hubConnection = new HubConnectionBuilder()
    //        .WithUrl(NavManager.ToAbsoluteUri("/drafthub"))
    //        .WithAutomaticReconnect()
    //        .Build();

    //   // photo = await RiderService.GetPhotoAsync();

    //    hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
    //    {
    //        var formattedMessage = $"{user}: {message}";
    //        messages.Add(formattedMessage);
    //        InvokeAsync(StateHasChanged);
    //    });

    //    await hubConnection.StartAsync();
    //}

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

}