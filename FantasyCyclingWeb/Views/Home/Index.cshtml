@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

@using FantasyCyclingParser
@using FantasyCyclingWeb.Models

@model DashboardViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js" charset="utf-8"></script>
<script src="~/js/DashboardModulejs.js"></script>
<script src="~/js/ChartsModule.js"></script>
<script src="~/echarts-master/dist/echarts.min.js"></script>
<script src="~/js/nvd3charts/nv.d3.min.js"></script>
<link href="~/js/nvd3charts/nv.d3.min.css" rel="stylesheet" />



<h1>@Model.CurrentConfig.Year Fantasy Cycling --- @Model.CurrentConfig.ConfigName</h1>


<div id="chart1">
    <svg></svg>
</div>

@*<br /><br />
<hr />
<br /><br />

<div id="lineChart">
    <svg></svg>
</div>*@


    @*<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

        <div class="panel panel-flat">
            <div class="panel-heading">
                <div class="heading-elements">
                    <ul class="icons-list">
                        <li><a data-action="collapse"></a></li>
                        <li><a data-action="reload"></a></li>
                        <li><a data-action="close"></a></li>
                    </ul>
                </div>
            </div>
            <div class="panel-body">
                <div class="chart-container">
                    <div class="chart has-fixed-height" style="float:right;" id="barChart"></div>
                </div>
            </div>
        </div>

        </div>*@

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="panel panel-flat">
            <div class="panel-body">

                @foreach (PDCTeamPoints t in Model.PDCTeamData)
            {
                    <strong>@t.Name<span style="float:right;"> Score: @t.Points</span></strong>
                            <hr />
                }
                @*<strong>The Bauhaus Movement<span style="float:right;"> Score: @Model.TheBauhausMovement.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Plaidstockings<span style="float:right;"> Score: @Model.Plaidstockings.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Rubicon<span style="float:right;"> Score: @Model.Rubicon.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Zauzage<span style="float:right;"> Score: @Model.Zauzage.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Cowboys<span style="float:right;"> Score: @Model.Cowboys.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Krtecek_35<span style="float:right;"> Score: @Model.Krtecek_35.TotalPointsScored</span></strong>
                    <hr />
                    <strong>PDCTeam Taco Van<span style="float:right;"> Score: @Model.PDCTeamTacoVan.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Closer Encounter<span style="float:right;"> Score: @Model.CloserEncounter.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Steven Kruijswijk's Snowplows<span style="float:right;"> Score: @Model.KruijswijksSnowplows.TotalPointsScored</span></strong>
                    <hr />
                    <strong>Goldbar35<span style="float:right;"> Score: @Model.Goldbar35.TotalPointsScored</span></strong>
                    <hr />*@
            </div>
        </div>
    </div>

@foreach (PDCTeam t in Model.PDCTeams)
{
    @Html.Partial("_Team", t)
}
 

    <script type="text/javascript">
        $(document).ready(function () {

            var vm = @Html.Raw(Json.Encode(@Model));

            DB.init(vm);
            window.onresize = function () {
                setTimeout(function () {
                    CHARTS.resize();


                }, 200);
            };

            data5 = [];
            var item = null;

            vm.PDCTeamData.forEach(function(item) {
                data5.push({x: item.Name, y: item.Points});
                // ^ only 1 source/color
                // ^ incremental X, starting at 0
            });

            historicalBarChart = [
    {
        key: "Cumulative Return",
        values: data5
    }
            ];

            nv.addGraph(function() {
                var chart = nv.models.discreteBarChart()
                    .x(function(d) { return d.x })
                    .y(function(d) { return d.y })
                    .staggerLabels(true)
                    //.staggerLabels(historicalBarChart[0].values.length > 8)
                    .showValues(true)
                    .duration(250)
                ;

                d3.select('#chart1 svg')
                    .datum(historicalBarChart)
                    .call(chart);

                nv.utils.windowResize(chart.update);
                return chart;
            });
            
            
             //CHARTS.FCLineChart();

            //initialize the javascript
            //App.init();
            //App.charts();
           
        });


    </script>
